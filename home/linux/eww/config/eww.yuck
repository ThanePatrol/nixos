;; Polling variables
(defpoll clock_hour :interval "5m" "date +\%H")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_datetime :interval "5s" "date '+%d %b %H:%M'")
(defpoll volume_percent :interval "3s" "./scripts/sound.sh speaker-volume")
(defpoll mic_percent :interval "3s" "./scripts/sound.sh mic-volume")
(defpoll ip_address_poll :interval "1s" "./scripts/get-ip-address.sh")
(defpoll current_window_name :interval "1s" "./scripts/workspaces.sh get-active-window")

(defvar eww "$HOME/.nix-profile/bin/eww -c $HOME/.config/eww")

;(defpoll workspace_json_polling :interval "1s" "./scripts/workspaces.sh get-workspaces-as-json")
;(defvar workspace_json workspace_json_polling)

;; TODO - memory + CPU usage + current song + cover art

(deflisten workspace_numbers "./scripts/workspaces.sh get-workspaces")

(defvar volume_show false)

(defwidget workspace_layout []
  (literal :content workspace_numbers)
  )

(defwidget workspaces []
  (box
    :class "workspaces"
    :space-evenly false
    :orientation "horizontal"
    :halign "start"
    :valign "center"
    (workspace_layout)
  ))

;;eww close example ; cp -r /home/hugh/nixos/home/linux/eww/config/* ~/.config/eww/  && eww open example

(defwidget clock_module []
  (box :class "module"
       :space-evenly false
       :orientation "horizontal"
       :spacing "3"
       :halign "center"
       (label :text clock_datetime
              :class "clock-datetime")
       (button :class "clock-date-class"
               ) ;; TODO calendar popup
       ))

(defwidget ip_address_module []
  (box :class "ip-address-module"
       :space-evenly false
       :orientation "horizontal"
       :halign "center"
       :spacing "5"
       (label :text ip_address_poll 
              :class "ip-address-text")
       (label :text "${volume_percent}%"
              :class "volume-percent")
  ))

(defwidget volume []
  (eventbox :onhover "${eww} update volume_show=true"
            :onhoverlost "${eww} update volume_show=false"
    (box :class "reveal-modules" :space-evenly false :orientation "horizontal" :spacing "3"
        (button  "i")
          (revealer :transition "slideleft"
                    :reveal volume_show
                    :duration "350ms"
            (scale :class "volume-slider"
                   :value volume_percent
                   :orientation "horizontal"
                   :tooltip "${volume_percent}"
                   :max 100 
                   :min 0
                   :onchange "./scripts/sound.sh set-volume {}"
            )
          )
      )
    )
  )

(defwidget left_bar []
  (box :orientation "horizontal" 
       :space-evenly false
       :halign "start"
       :class "left-modules"
       (workspaces)
       ))

(defwidget middle_bar []
  (box :orientation "horizontal"
       :space-evenly false
       :halign "center"
       :class "center-modules"
       (clock_module)
       ))

(defwidget right_bar []
  (box :orientation "horizontal"
      :space-evenly false
      :halign "end"
      :class "right-modules"
      (ip_address_module)    
  ))

(defwidget main_bar []
  (box :class "main-bar"
       :orientation "horizontal"
       (left_bar)
       (middle_bar)
       (right_bar)
       ))

( defwindow top_bar 
  :monitor 0 
  :geometry (geometry :x "0%"
                      :y "15px"
                      :width "99%"
                      :height "2%"
                      :anchor "top center")
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore false
  :exclusive true
  ;;(greeter :text "say hello!!ðŸ‘‹" :name "Tim")
  (main_bar)

)

(defwidget greeter [?text name]
  (box :orientation "horizontal"
       :halign "center"
       text
       (button :onclick "dunstify 'hello' 'hello, ${name}'"
               "Greet")))


(defwidget date [?do-i-need-you]
  (box :orientation "horizontal"
       :halign "center"
      )
  )
